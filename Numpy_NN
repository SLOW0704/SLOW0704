losses, acces = [], []
for i in range(1000):
    # forward
    ho = np.dot(x, Wo) + bo  # (bs, 3), (3, 1), (1) -> (bs, 1)
    y_pred = sigmoid(ho)  # (bs, 1) -> (bs, 1)
    # loss
    MSE = np.square(y_true - y_pred)  # (bs, 1), (bs, 1) -> (bs, 1)
    loss = np.mean(MSE)
    losses.append(loss)
    # acc
    y_pred_class = (y_pred > 0.5).astype(np.float)  # (bs, 1) -> (bs, 1)
    y_match = (y_true == y_pred_class).astype(np.float)
    acc = np.sum(y_match) / max(y_true.shape[0], 1)  # (bs, 1) -> (1,)
    acces.append(acc)
    # backward
    dMSE_dy = -2 * (y_true - y_pred)  # (bs, 1), (bs, 1) -> (bs, 1)
    dy_dho = sigmoid_deriv(y_pred)  # (bs, 1) -> (bs, 1)
    dMSE_dho = dMSE_dy * dy_dho  # (bs, 1), (bs, 1) -> (bs, 1)
    dho_dWo = x  # (bs, 3)
    dho_dbo = np.array([[1, 1, 1, 1]]).T  # (bs, 1)
    delta_Wo = np.dot(dho_dWo.T, dMSE_dho)  # (bs, 3).T, (bs, 1) -> (3, 1)
    delta_bo = np.dot(dho_dbo.T, dMSE_dho)  # (bs, 1).T, (bs, 1) -> (1, 1)
    # update weights
    Wo -= lr * delta_Wo  # (3, 1), (3, 1) -> (3, 1)
    bo -= lr * delta_bo.squeeze()  # (1,), (1,) -> (1,)
